server:
  port: 8080

spring:
  application:
    name: api-gateway

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  cloud:
    gateway:
      # ROUTE DEFINITIONS MOVED HERE FROM GatewayConfig.kt
      routes:
        - id: auth-service
          uri: ${services.auth-service.url}
          predicates:
            - Path=/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: '#{@ipKeyResolver}'

        - id: coupon-service
          uri: ${services.coupon-service.url}
          predicates:
            - Path=/coupons/**, /promotions/**

        - id: station-service
          uri: ${services.station-service.url}
          predicates:
            - Path=/stations/**

        - id: ad-engine
          uri: ${services.ad-engine.url}
          predicates:
            - Path=/ad/**, /campaigns/**
          filters:
            - name: CircuitBreaker
              args:
                name: ad-engine-cb
                fallbackUri: forward:/fallback/ad-engine

        - id: raffle-service
          uri: ${services.raffle-service.url}
          predicates:
            - Path=/raffles/**

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: '*'
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: '*'
            allowCredentials: true
            maxAge: 3600

      # Circuit breaker configuration
      httpclient:
        connect-timeout: 5000
        response-timeout: 30s
        pool:
          max-connections: 100
          max-idle-time: 30s

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://auth-service:8081}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://auth-service:8081/.well-known/jwks.json}

# Resilience4j Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      ad-engine-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      raffle-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging configuration
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    com.gasolinerajsm.apigateway: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'

# Service URLs (can be overridden by environment variables)
services:
  auth-service:
    url: ${AUTH_SERVICE_URL:http://auth-service:8081}
  coupon-service:
    url: ${COUPON_SERVICE_URL:http://coupon-service:8084}
  station-service:
    url: ${STATION_SERVICE_URL:http://station-service:8083}
  ad-engine:
    url: ${AD_ENGINE_URL:http://ad-engine:8082}
  raffle-service:
    url: ${RAFFLE_SERVICE_URL:http://raffle-service:8085}

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081
          jwk-set-uri: http://localhost:8081/.well-known/jwks.json

services:
  auth-service:
    url: http://localhost:8081
  coupon-service:
    url: http://localhost:8084
  station-service:
    url: http://localhost:8083
  ad-engine:
    url: http://localhost:8082
  raffle-service:
    url: http://localhost:8085

logging:
  level:
    root: INFO
    com.gasolinerajsm.apigateway: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod

  # Redis configuration for rate limiting
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 60000
      client-type: lettuce
      connect-timeout: 5s
      ssl:
        enabled: ${REDIS_SSL_ENABLED:false}
      sentinel:
        master: ${REDIS_SENTINEL_MASTER:}
        nodes: ${REDIS_SENTINEL_NODES:}
        password: ${REDIS_SENTINEL_PASSWORD:}
      cluster:
        nodes: ${REDIS_CLUSTER_NODES:}
        max-redirects: 3
        password: ${REDIS_CLUSTER_PASSWORD:}

logging:
  level:
    root: WARN
    com.gasolinerajsm.apigateway: INFO
  file:
    name: /var/log/api-gateway.log

management:
  endpoint:
    health:
      show-details: when-authorized

# Development profile
spring:
  config:
    activate:
      on-profile: dev

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081
          jwk-set-uri: http://localhost:8081/.well-known/jwks.json

services:
  auth-service:
    url: http://localhost:8081
  coupon-service:
    url: http://localhost:8084
  station-service:
    url: http://localhost:8083
  ad-engine:
    url: http://localhost:8082
  raffle-service:
    url: http://localhost:8085

logging:
  level:
    root: INFO
    com.gasolinerajsm.apigateway: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: WARN
    com.gasolinerajsm.apigateway: INFO
  file:
    name: /var/log/api-gateway.log

management:
  endpoint:
    health:
      show-details: when-authorized
